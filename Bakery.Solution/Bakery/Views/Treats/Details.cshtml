@{
    Layout = "_Layout";
}

@model Bakery.Models.Treat

<h2>Treat Details</h2>
<hr />
<h3>@Html.DisplayNameFor(model => model.Description): @Html.DisplayFor(model => model.Description)<h3>
    @* DisplayNameFor() displays property name while DisplayFor() displays the value of that property. *@

@if(@Model.Flavors.Count == 0)
{
  <p>This treat does not belong to any flavors</p>
}
else
{
  <h4>Flavors the treat belongs to:</h4>
  <ul>
    @foreach (var join in Model.Flavors)
    {
      <li>@join.Flavor.Name</li>
      @using (Html.BeginForm("DeleteFlavor", "Treats"))
      {
        @Html.Hidden("joinId", @join.FlavorTreatId)
        <input type="submit" value="Delete"/>
      }
    }
  </ul>
}

<p>@Html.ActionLink("Back to list", "Index")</p>
<p>@Html.ActionLink("Add a Flavor", "AddFlavor", new { id = Model.TreatId })</p>
<p>@Html.ActionLink("Edit Treat", "Edit", new { id = Model.TreatId })</p>
<p>@Html.ActionLink("Delete Treat", "Delete", new { id = Model.TreatId })</p>